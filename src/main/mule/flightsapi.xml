<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:apikit="http://www.mulesoft.org/schema/mule/mule-apikit" xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd http://www.mulesoft.org/schema/mule/mule-apikit http://www.mulesoft.org/schema/mule/mule-apikit/current/mule-apikit.xsd http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd  http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd">
    <http:listener-config name="flightsapi-httpListenerConfig">
        <http:listener-connection host="0.0.0.0" port="8081" />
    </http:listener-config>
    <apikit:config name="flightsapi-config" api="resource::167d5a72-8c0d-44a7-a4f8-60e62c8a11fe:flightsapi:3.1.0:raml:zip:flightsapi.raml" outboundHeadersMapName="outboundHeaders" httpStatusVarName="httpStatus" />
    <db:config name="Database_Config" doc:name="Database Config" doc:id="ac29f3ab-18ce-44d2-a18a-6d7421bd2a12">
        <db:my-sql-connection host="rds-mysql-assessment.ckld9drpn0yb.eu-west-1.rds.amazonaws.com" port="3306" user="varghese" password="amrsterdam" database="airlines_sandbox" />
    </db:config>
    <flow name="flightsapi-main">
        <http:listener config-ref="flightsapi-httpListenerConfig" path="/api/*">
            <http:response statusCode="#[vars.httpStatus default 200]">
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:response>
            <http:error-response statusCode="#[vars.httpStatus default 500]">
                <http:body>#[payload]</http:body>
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:error-response>
        </http:listener>
        <apikit:router config-ref="flightsapi-config" />
        <error-handler>
            <on-error-propagate type="APIKIT:BAD_REQUEST">
                <ee:transform>
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Bad request"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">400</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_FOUND">
                <ee:transform>
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Resource not found"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">404</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:METHOD_NOT_ALLOWED">
                <ee:transform>
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Method not allowed"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">405</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_ACCEPTABLE">
                <ee:transform>
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Not acceptable"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">406</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:UNSUPPORTED_MEDIA_TYPE">
                <ee:transform>
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Unsupported media type"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">415</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_IMPLEMENTED">
                <ee:transform>
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Not Implemented"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">501</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
        </error-handler>
    </flow>
    <flow name="flightsapi-console">
        <http:listener config-ref="flightsapi-httpListenerConfig" path="/console/*">
            <http:response statusCode="#[vars.httpStatus default 200]">
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:response>
            <http:error-response statusCode="#[vars.httpStatus default 500]">
                <http:body>#[payload]</http:body>
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:error-response>
        </http:listener>
        <apikit:console config-ref="flightsapi-config" />
        <error-handler>
            <on-error-propagate type="APIKIT:NOT_FOUND">
                <ee:transform>
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Resource not found"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">404</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
        </error-handler>
    </flow>
    <flow name="head:\destinations:flightsapi-config">
        <logger level="INFO" message="head:\destinations:flightsapi-config" />
    </flow>
    <flow name="patch:\flight:application\json:flightsapi-config">
        <ee:transform doc:name="Save inputParams" doc:id="87b15416-68ba-48d7-af74-e2cb3dde0369">
            <ee:message />
            <ee:variables>
                <ee:set-variable variableName="inputParams"><![CDATA[%dw 2.0
output application/json
---
{
"ticketPricePerSeat" : payload.ticketPricePerSeat,
"availableSeats": payload.availableSeats
}]]></ee:set-variable>
            </ee:variables>
        </ee:transform>
        <choice doc:name="Choice" doc:id="5ded3ac8-a0b8-497e-a8c0-e3b817298fcd">
            <when expression="#[payload.availableSeats != null and payload.ticketPricePerSeat==null]">
                <db:update doc:name="Update Seats only" doc:id="143bdefb-6d39-4d6e-989c-f493028f0a8a" config-ref="Database_Config">
                    <db:sql><![CDATA[update airlines_sandbox.flights_varghese set Seat_Availability= :availableSeats
where Flight_Code = :flightCode and Departure_Date= :departureDateTime;]]></db:sql>
                    <db:input-parameters><![CDATA[#[{'availableSeats': payload.availableSeats,'flightCode': payload.flightCode,'departureDateTime': (payload.departureDateTime as DateTime) as String{format: "y-MM-d h:m"}}]]]></db:input-parameters>
                </db:update>
            </when>
            <when expression="#[payload.availableSeats == null and payload.ticketPricePerSeat !=null]">
                <db:update doc:name="Update Price only" doc:id="d9525c55-aa7c-46c6-84da-7926d59fb4fa" config-ref="Database_Config">
                    <db:sql><![CDATA[update airlines_sandbox.flights_varghese set Price= :ticketPricePerSeat
where Flight_Code = :flightCode and Departure_Date= :departureDateTime;]]></db:sql>
                    <db:input-parameters><![CDATA[#[{'ticketPricePerSeat': payload.ticketPricePerSeat,'flightCode': payload.flightCode,'departureDateTime': (payload.departureDateTime as DateTime) as String{format: "y-MM-d h:m"}}]]]></db:input-parameters>
                </db:update>
            </when>
            <when expression="#[payload.availableSeats != null and payload.ticketPricePerSeat !=null]">
                <db:update doc:name="Update Price and Seatsavailability" doc:id="5f587431-90ac-41c4-b7d3-a33c56411fe5" config-ref="Database_Config">
                    <db:sql><![CDATA[update airlines_sandbox.flights_varghese set Price= :ticketPricePerSeat,Seat_Availability= :availableSeats
where Flight_Code = :flightCode and Departure_Date= :departureDateTime;]]></db:sql>
                    <db:input-parameters><![CDATA[#[{'ticketPricePerSeat': payload.ticketPricePerSeat,'availableSeats': payload.availableSeats,'flightCode': payload.flightCode,'departureDateTime': (payload.departureDateTime as DateTime) as String{format: "y-MM-d h:m"}}]]]></db:input-parameters>
                </db:update>
            </when>
            <otherwise>
                <ee:transform doc:name="Transform Message" doc:id="7e11f17e-d39f-4b41-8101-8953106296cc">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/java
---
affectedRows: -1]]></ee:set-payload>
                    </ee:message>
                </ee:transform>
            </otherwise>
        </choice>
        <choice doc:name="Choice" doc:id="a2d39bde-e098-4a07-b2d5-e02b62a3b594">
            <when expression="payload.affectedRows==1">
                <ee:transform doc:name="Success-No output paylaod" doc:id="41209297-b895-4a15-bdd0-e3ae10e4b3ee">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{}]]></ee:set-payload>
                    </ee:message>
                </ee:transform>
            </when>
            <when expression="payload.affectedRows==0">
                <raise-error doc:name="Raise error" doc:id="91257ecc-a64b-4d4e-b20b-d2cc6fa54390" type="UPD:NO_RECORDS_UPDATED" description="No records were updated" />
            </when>
            <when expression="payload.affectedRows==-1">
                <ee:transform doc:name="Nothing to change..no output payload" doc:id="545ed12a-1c60-4c78-9e6b-b4ee053bc285">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{}]]></ee:set-payload>
                    </ee:message>
                </ee:transform>
            </when>
            <otherwise>
                <raise-error doc:name="Raise error" doc:id="16a52890-1602-448d-b47a-ef56ff824858" type="UPD:MULT_UPDATED" description="multiple records updated-raise error" />
            </otherwise>
        </choice>
        <logger level="INFO" message="patch:\flight:application\json:flightsapi-config" />
        <error-handler>
            <on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="ae15f3f4-8bba-4a88-8c5b-49fa34857cd9">
                <ee:transform doc:name="Transform Message" doc:id="12c656e7-56c0-48b7-92e6-f52b1516bc02">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json encoding="UTF-8", skipNullOn="everywhere"
---
error: {
	errorCode: ("404" ++ " : Not Found"),
	errorMessage: "No valid record found to update.CHeck the flightCode and departureDateTime(Maybe use the GET to get the correct value for the departureDateTime)",
	errorDescription: "Nothing updated",
	errorDateTime: now() as String { format: "yyyy-MM-dd'T'HH:mm:ss" }
}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus"><![CDATA[404]]></ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
        </error-handler>
    </flow>
    <flow name="get:\destinations:flightsapi-config">
        <ee:transform doc:name="Save inputParams" doc:id="00715d37-72f1-4c76-b247-3374f5a40685">
            <ee:message />
            <ee:variables>
                <ee:set-variable variableName="inputParams"><![CDATA[%dw 2.0
output application/java
---
{
	"airlineIATACode": attributes.queryParams.airlineIATACode,
	"page": attributes.queryParams.page default 1,
	"size": attributes.queryParams.size default 10
}]]></ee:set-variable>
            </ee:variables>
        </ee:transform>
        <db:select doc:name="Select" doc:id="4a1420de-cad2-44f7-9130-537b3c485f13" config-ref="Database_Config">
			<db:sql ><![CDATA[select * from airlines_sandbox.airports where IATA in(
select distinct Destination_Airport from airlines_sandbox.flights_varghese where Flight_Code like :airlineIATACode);]]></db:sql>
			<db:input-parameters ><![CDATA[#[{'airlineIATACode': vars.inputParams.airlineIATACode ++ '%'}]]]></db:input-parameters>
		</db:select>
		<ee:transform doc:name="Transform Message" doc:id="8b10988d-f559-4dc1-b41b-a980610ddb02" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	destinations: payload map ( payload01 , indexOfPayload01 ) -> {
		country: payload01.Country,
		airportName: payload01.Name,
		city: payload01.City,
		airlineIATACode: vars.inputParams.airlineIATACode as String
	}
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" message="get:\destinations:flightsapi-config" />
    </flow>
    <flow name="get:\flights:flightsapi-config">
        <ee:transform doc:name="Save Input Variables" doc:id="3aae7280-9b07-4521-9fc6-c7de1ec37e51">
            <ee:message />
            <ee:variables>
                <ee:set-variable variableName="inputParams"><![CDATA[%dw 2.0
output application/json
---
{
"departureDate" : attributes.queryParams.departureDate
}]]></ee:set-variable>
            </ee:variables>
        </ee:transform>
        <logger level="INFO" doc:name="Logger" doc:id="696e6da2-603f-4f94-9280-b6a567b2e2aa" message="#[vars.inputParams.departureDate]" />
        <db:select doc:name="Select" doc:id="602991a7-a380-4a47-89e6-f95e76ed9adc" config-ref="Database_Config">
            <db:sql><![CDATA[select * from flights_varghese where DATE(Departure_date) = :departureDate]]></db:sql>
            <db:input-parameters><![CDATA[#[{'departureDate' : vars.inputParams.departureDate}]]]></db:input-parameters>
        </db:select>
        <ee:transform doc:name="Transform to Output Message" doc:id="73855b91-7722-4440-8080-0a930f044c9f">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	flights: payload map ( payload01 , indexOfPayload01 ) -> {
		departureAiportIATACode: payload01.Departure_Airport,
		aircraftMakeModel: payload01.Aircraft_Type,
		ticketPricePerSeat: payload01.Price,
		flightCode: payload01.Flight_Code,
		destinatiomAirportIATACode: payload01.Destination_Airport,
		availableSeats: payload01.Seat_Availability,
		departureDateTime: payload01.Departure_Date as String,
		airlineName: payload01.Airline_Name
	}
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
        <logger level="INFO" message="get:\flights:flightsapi-config" />
    </flow>
    <flow name="post:\flight:application\json:flightsapi-config">
        <ee:transform doc:name="Transform Message" doc:id="1b16f2ee-d2de-4958-8a05-2653fb491f5d">
            <ee:message />
            <ee:variables>
                <ee:set-variable variableName="departureDateTransformed"><![CDATA[(payload.departureDateTime as DateTime) as String{format: "y-MM-d h:m:s"}]]></ee:set-variable>
            </ee:variables>
        </ee:transform>
        <logger level="INFO" doc:name="Logger" doc:id="8d151e53-dced-42f2-97ee-ceaf42835d80" message="#[vars.departureDateTransformed]" />
        <db:insert doc:name="Insert" doc:id="5f62f56a-d280-43a1-b7c2-271f84c74845" config-ref="Database_Config">
            <db:sql><![CDATA[insert into airlines_sandbox.flights_varghese (Flight_Code,Airline_Name,Departure_Airport,Destination_Airport,Departure_Date,Aircraft_Type,Seat_Availability,Price)
VALUES (:flightCode,:airlineName,:departureAiportIATACode,:destinatiomAirportIATACode,:departureDateTime,:aircraftMakeModel,:availableSeats,:ticketPricePerSeat)]]></db:sql>
            <db:input-parameters><![CDATA[#[{'flightCode': payload.flightCode,'airlineName': payload.airlineName,'departureAiportIATACode': payload.departureAiportIATACode,'destinatiomAirportIATACode': payload.destinatiomAirportIATACode,'departureDateTime': (payload.departureDateTime as DateTime) as String{format: "y-MM-d h:m"},'aircraftMakeModel': payload.aircraftMakeModel,'availableSeats': payload.availableSeats,'ticketPricePerSeat': payload.ticketPricePerSeat}]]]></db:input-parameters>
        </db:insert>
        <ee:transform doc:name="Transform Message" doc:id="1bcb5eec-1fd6-4ad9-8e7a-1d898d90688d">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
            </ee:message>
        </ee:transform>
        <logger level="INFO" message="post:\flight:application\json:flightsapi-config" />
        <error-handler>
            <on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="c33bd799-f0a4-4fdf-b49a-5ae3acc67f7b" type="DB:QUERY_EXECUTION">
                <logger level="INFO" doc:name="Logger" doc:id="c369aeb4-5bda-475d-9b54-0ffaf92f846e" message="#[error.description]" />
                <ee:transform doc:name="Transform Message" doc:id="9dd2849f-6cd9-4cda-b127-7a66cd8bf27a">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json encoding="UTF-8", skipNullOn="everywhere"
---
error: {
	errorCode: ("409" ++ " : Conflict"),
	errorMessage: "Data Integrity Constraint",
	errorDescription: "Resource already exist",
	errorDateTime: now() as String { format: "yyyy-MM-dd'T'HH:mm:ss" }
}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus"><![CDATA[409]]></ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
        </error-handler>
    </flow>
</mule>
